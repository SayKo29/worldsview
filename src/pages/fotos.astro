---
import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Galería de Fotos';
const description = 'Una colección de momentos capturados en imágenes.';
const permalink = `${Astro.site.href}fotos`;

// Array de fotos de ejemplo - puedes reemplazar con tus propias fotos
const fotos = [
  {
    id: 1,
    src: '/assets/blog/casual-life-3d-meditation-crystal.webp',
    alt: 'Meditación y cristales',
    title: 'Momentos de paz',
    description: 'Encontrando tranquilidad en la meditación'
  },
  {
    id: 2,
    src: '/assets/blog/casual-life-3d-workspace.webp',
    alt: 'Espacio de trabajo creativo',
    title: 'Mi santuario creativo',
    description: 'Donde las ideas cobran vida'
  },
  {
    id: 3,
    src: '/assets/blog/casual-life-3d-girl-boy-poses.webp',
    alt: 'Amistades y conexiones',
    title: 'Conexiones humanas',
    description: 'Los momentos que importan'
  },
  {
    id: 4,
    src: '/assets/blog/casual-life-3d-likes.webp',
    alt: 'Interacciones sociales',
    title: 'Interacciones digitales',
    description: 'El mundo conectado'
  },
  {
    id: 5,
    src: '/assets/about-illustration.webp',
    alt: 'Ilustración de cuaderno',
    title: 'Reflexiones',
    description: 'Pensamientos en papel'
  },
  {
    id: 6,
    src: '/assets/home-illustration.webp',
    alt: 'Persona leyendo',
    title: 'Momentos de lectura',
    description: 'Aprendiendo y creciendo'
  }
];
---

<BaseLayout title={title} description={description} permalink={permalink} current="fotos">
  <div class="container">
    <h1 class="gallery-title">Galería de Fotos</h1>
    <p class="gallery-intro">Una colección de momentos especiales capturados a través del tiempo.</p>
    
    <div class="gallery-grid">
      {fotos.map((foto) => (
        <div class="gallery-item" data-foto-id={foto.id}>
          <img 
            src={foto.src} 
            alt={foto.alt}
            loading="lazy"
            class="gallery-image"
          />
          <div class="gallery-overlay">
            <h3>{foto.title}</h3>
            <p>{foto.description}</p>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Modal Fullscreen -->
  <div id="fullscreen-modal" class="modal">
    <div class="modal-content">
      <span class="close-modal">&times;</span>
      <button class="nav-btn prev-btn">&lt;</button>
      <button class="nav-btn next-btn">&gt;</button>
      
      <div class="modal-image-container">
        <img id="modal-image" src="" alt="" />
        <div class="modal-info">
          <h2 id="modal-title"></h2>
          <p id="modal-description"></p>
          <span id="modal-counter"></span>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  .gallery-intro {
    text-align: center;
    margin-bottom: 3rem;
    font-size: 1.2rem;
    color: var(--text-secondary);
  }

  .gallery-title {
    text-align: center;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .gallery-item {
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background: rgba(254, 247, 230, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(230, 126, 34, 0.2);
  }

  .gallery-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(139, 69, 19, 0.2);
  }

  .gallery-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }

  .gallery-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(
      transparent,
      rgba(45, 27, 14, 0.8)
    );
    color: var(--warm-light);
    padding: 1.5rem;
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-overlay {
    transform: translateY(0);
  }

  .gallery-overlay h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.3rem;
  }

  .gallery-overlay p {
    margin: 0;
    font-size: 1rem;
    opacity: 0.9;
  }

  /* Modal Styles */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(10px);
  }

  .modal-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-modal {
    position: absolute;
    top: 20px;
    right: 30px;
    color: var(--warm-light);
    font-size: 3rem;
    font-weight: bold;
    cursor: pointer;
    z-index: 1001;
    transition: color 0.3s ease;
  }

  .close-modal:hover {
    color: var(--primary-color);
  }

  .nav-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(230, 126, 34, 0.8);
    color: var(--warm-light);
    border: none;
    padding: 1rem 1.5rem;
    font-size: 2rem;
    cursor: pointer;
    border-radius: 8px;
    transition: background 0.3s ease;
    z-index: 1001;
  }

  .nav-btn:hover {
    background: rgba(230, 126, 34, 1);
  }

  .prev-btn {
    left: 20px;
  }

  .next-btn {
    right: 20px;
  }

  .modal-image-container {
    position: relative;
    max-width: 90%;
    max-height: 90%;
    text-align: center;
  }

  #modal-image {
    max-width: 100%;
    max-height: 80vh;
    object-fit: contain;
    border-radius: 8px;
  }

  .modal-info {
    margin-top: 1rem;
    color: var(--warm-light);
  }

  .modal-info h2 {
    margin: 0 0 0.5rem 0;
    font-size: 2rem;
  }

  .modal-info p {
    margin: 0 0 1rem 0;
    font-size: 1.2rem;
    opacity: 0.9;
  }

  #modal-counter {
    font-size: 1rem;
    opacity: 0.7;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1rem;
    }

    .gallery-image {
      height: 200px;
    }

    .nav-btn {
      padding: 0.8rem 1.2rem;
      font-size: 1.5rem;
    }

    .close-modal {
      font-size: 2.5rem;
      top: 15px;
      right: 20px;
    }

    .modal-info h2 {
      font-size: 1.5rem;
    }

    .modal-info p {
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .gallery-grid {
      grid-template-columns: 1fr;
    }

    .nav-btn {
      padding: 0.6rem 1rem;
      font-size: 1.2rem;
    }

    .prev-btn {
      left: 10px;
    }

    .next-btn {
      right: 10px;
    }
  }
</style>

<script>
  // Datos de las fotos
  const fotos = [
    {
      id: 1,
      src: '/assets/blog/casual-life-3d-meditation-crystal.webp',
      alt: 'Meditación y cristales',
      title: 'Momentos de paz',
      description: 'Encontrando tranquilidad en la meditación'
    },
    {
      id: 2,
      src: '/assets/blog/casual-life-3d-workspace.webp',
      alt: 'Espacio de trabajo creativo',
      title: 'Mi santuario creativo',
      description: 'Donde las ideas cobran vida'
    },
    {
      id: 3,
      src: '/assets/blog/casual-life-3d-girl-boy-poses.webp',
      alt: 'Amistades y conexiones',
      title: 'Conexiones humanas',
      description: 'Los momentos que importan'
    },
    {
      id: 4,
      src: '/assets/blog/casual-life-3d-likes.webp',
      alt: 'Interacciones sociales',
      title: 'Interacciones digitales',
      description: 'El mundo conectado'
    },
    {
      id: 5,
      src: '/assets/about-illustration.webp',
      alt: 'Ilustración de cuaderno',
      title: 'Reflexiones',
      description: 'Pensamientos en papel'
    },
    {
      id: 6,
      src: '/assets/home-illustration.webp',
      alt: 'Persona leyendo',
      title: 'Momentos de lectura',
      description: 'Aprendiendo y creciendo'
    }
  ];

  let currentFotoIndex = 0;

  // Elementos del DOM
  const modal = document.getElementById('fullscreen-modal');
  const modalImage = document.getElementById('modal-image');
  const modalTitle = document.getElementById('modal-title');
  const modalDescription = document.getElementById('modal-description');
  const modalCounter = document.getElementById('modal-counter');
  const closeBtn = document.querySelector('.close-modal');
  const prevBtn = document.querySelector('.prev-btn');
  const nextBtn = document.querySelector('.next-btn');

  // Abrir modal
  document.querySelectorAll('.gallery-item').forEach((item, index) => {
    item.addEventListener('click', () => {
      currentFotoIndex = index;
      openModal();
    });
  });

  // Cerrar modal
  closeBtn.addEventListener('click', closeModal);
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });

  // Navegación
  prevBtn.addEventListener('click', () => {
    currentFotoIndex = (currentFotoIndex - 1 + fotos.length) % fotos.length;
    updateModal();
  });

  nextBtn.addEventListener('click', () => {
    currentFotoIndex = (currentFotoIndex + 1) % fotos.length;
    updateModal();
  });

  // Navegación con teclado
  document.addEventListener('keydown', (e) => {
    if (modal.style.display === 'block') {
      switch(e.key) {
        case 'Escape':
          closeModal();
          break;
        case 'ArrowLeft':
          currentFotoIndex = (currentFotoIndex - 1 + fotos.length) % fotos.length;
          updateModal();
          break;
        case 'ArrowRight':
          currentFotoIndex = (currentFotoIndex + 1) % fotos.length;
          updateModal();
          break;
      }
    }
  });

  function openModal() {
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
    updateModal();
  }

  function closeModal() {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  function updateModal() {
    const foto = fotos[currentFotoIndex];
    modalImage.src = foto.src;
    modalImage.alt = foto.alt;
    modalTitle.textContent = foto.title;
    modalDescription.textContent = foto.description;
    modalCounter.textContent = `${currentFotoIndex + 1} / ${fotos.length}`;
  }
</script> 